#N canvas 643 33 646 892 12;
#X floatatom 195 630 0 0 0 0 - - - 0;
#X floatatom 158 630 0 0 0 0 - - - 0;
#X floatatom 118 630 0 0 0 0 - - - 0;
#X floatatom 270 630 0 0 0 0 - - - 0;
#X floatatom 232 630 0 0 0 0 - - - 0;
#X obj 195 602 <;
#X floatatom 401 630 0 0 0 0 - - - 0;
#X floatatom 363 630 0 0 0 0 - - - 0;
#X obj 119 127 &&;
#X obj 160 126 ||;
#X obj 363 602 &;
#X obj 401 602 |;
#X obj 118 602 >;
#X obj 158 602 >=;
#X obj 270 602 ==;
#X obj 232 602 <=;
#X floatatom 363 470 5 0 0 0 - - - 0;
#X obj 363 500 t b f;
#X text 147 443 set left and right inputs here;
#X floatatom 483 630 0 0 0 0 - - - 0;
#X floatatom 441 630 0 0 0 0 - - - 0;
#X obj 483 602 <<;
#X obj 441 602 >>;
#X floatatom 309 630 0 0 0 0 - - - 0;
#X obj 309 602 !=;
#X obj 32 20 >;
#X obj 60 20 >=;
#X obj 116 20 <=;
#X obj 88 20 <;
#X obj 145 20 ==;
#X obj 173 20 !=;
#X floatatom 422 676 0 0 0 0 - - - 0;
#X floatatom 422 729 0 0 0 0 - - - 0;
#X obj 422 702 == 0;
#X floatatom 475 676 0 0 0 0 - - - 0;
#X floatatom 475 729 0 0 0 0 - - - 0;
#X obj 475 702 < 5;
#X obj 201 20 div;
#X obj 399 20 mod;
#X floatatom 98 289 4 0 0 0 - - - 0;
#X floatatom 56 288 4 0 0 0 - - - 0;
#X floatatom 98 195 4 0 0 0 - - - 0;
#X obj 56 260 div;
#X obj 98 222 t b f;
#X obj 98 261 mod;
#X text 399 846 Updated for Pd version 0.47;
#X obj 57 793 +;
#X text 44 765 see also:;
#X text 157 209 div and mod do integer division. div outputs the integer
quotient and mod outputs the remainder (modulus). In addition the "%"
operator (provided for back compatibility) is like "mod" but acts differently
for negative inputs (and might act variously depending on CPU design).
;
#X floatatom 118 470 5 0 0 0 - - - 0;
#X obj 230 20 &&;
#X obj 258 20 ||;
#X obj 286 20 &;
#X obj 314 20 |;
#X obj 342 20 <<;
#X obj 371 20 >>;
#X floatatom 56 195 4 0 0 0 - - - 0;
#X floatatom 520 676 0 0 0 0 - - - 0;
#X floatatom 520 729 0 0 0 0 - - - 0;
#X obj 520 702 div 3;
#X obj 56 850 expr;
#X text 97 851 - evaluation expressions, f 25;
#X obj 57 820 sin;
#X obj 91 820 log;
#X text 123 821 (etc) - math functions;
#X text 92 792 (etc) - binary arithmetic operators;
#X obj 119 69 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 160 90 t b f;
#X obj 160 69 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 119 152 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 160 152 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X text 30 96 Logical operators:, f 10;
#X text 227 74 && ('and')outputs 1 if both inputs are nonzero and 0
otherwise., f 46;
#X text 227 108 || ('or) outputs 1 if either one is nonzero., f 46
;
#X text 430 19 - other binary operations;
#X text 37 329 The bitwise operators "&" and "|" perform "and" and
"or" on each bit of the inputs considered as binary numbers. ">>" and
"<<" perform left and right signed bit shifts. These also expect integer
input and truncate float values., f 82;
#X text 32 382 Relational operators ('>' greater than \, '==' equals
\, '!=' not equals etc.) output 1 or 0 depending on whether the relation
is true or false. Unlike the others \, these can deal with float input.
, f 84;
#X text 218 134 note these expect integer input \, so 0.5 or -0.5 are
truncated to '0' and not considered 'nonzero'.;
#X text 51 685 All of these objects can have a creation argument to
initialize the right inlet. They also all take a bang message to evaluate
the operation with the previously set values., f 49;
#X connect 5 0 0 0;
#X connect 8 0 69 0;
#X connect 9 0 70 0;
#X connect 10 0 7 0;
#X connect 11 0 6 0;
#X connect 12 0 2 0;
#X connect 13 0 1 0;
#X connect 14 0 3 0;
#X connect 15 0 4 0;
#X connect 16 0 17 0;
#X connect 17 0 12 0;
#X connect 17 0 24 0;
#X connect 17 0 22 0;
#X connect 17 0 21 0;
#X connect 17 0 15 0;
#X connect 17 0 14 0;
#X connect 17 0 13 0;
#X connect 17 0 11 0;
#X connect 17 0 10 0;
#X connect 17 0 5 0;
#X connect 17 1 10 1;
#X connect 17 1 11 1;
#X connect 17 1 21 1;
#X connect 17 1 22 1;
#X connect 17 1 12 1;
#X connect 17 1 13 1;
#X connect 17 1 14 1;
#X connect 17 1 24 1;
#X connect 17 1 15 1;
#X connect 17 1 5 1;
#X connect 21 0 19 0;
#X connect 22 0 20 0;
#X connect 24 0 23 0;
#X connect 31 0 33 0;
#X connect 33 0 32 0;
#X connect 34 0 36 0;
#X connect 36 0 35 0;
#X connect 41 0 43 0;
#X connect 42 0 40 0;
#X connect 43 0 44 0;
#X connect 43 0 42 0;
#X connect 43 1 44 1;
#X connect 43 1 42 1;
#X connect 44 0 39 0;
#X connect 49 0 10 0;
#X connect 49 0 11 0;
#X connect 49 0 21 0;
#X connect 49 0 22 0;
#X connect 49 0 12 0;
#X connect 49 0 13 0;
#X connect 49 0 14 0;
#X connect 49 0 15 0;
#X connect 49 0 5 0;
#X connect 49 0 24 0;
#X connect 56 0 42 0;
#X connect 56 0 44 0;
#X connect 57 0 59 0;
#X connect 59 0 58 0;
#X connect 66 0 8 0;
#X connect 66 0 9 0;
#X connect 67 0 8 0;
#X connect 67 0 9 0;
#X connect 67 1 9 1;
#X connect 67 1 8 1;
#X connect 68 0 67 0;

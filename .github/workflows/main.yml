# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, github-actions ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  makefile_mac:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: |
          make -C src -f makefile.mac ARCH="" EXTRAARCH=""

  makefile_mingw:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - name: Install MSYS2
        uses: msys2/setup-msys2@v2
        with:
          release: false
          path-type: inherit
      - name: Checkout
        uses: actions/checkout@v2
      - name: ASIOSDK
        run: |
          wget -q -O asiosdk.zip https://www.steinberg.net/asiosdk
          unzip -q asiosdk.zip -d asio
          i=0; for f in asio/*/; do test -d "${f}" || break; echo "${f}"; until mv -v "${f%/}" asio/ASIOSDK; do echo "trying $i"; sleep 1; i=$((i+1)); if [ $i -ge 10 ]; then echo "giving up"; break; fi; done; done
      - name: Build
        run: |
          make -C src -f makefile.mingw


  makefile_msvc:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
       include:
         - arch: "x64"
           aflags: "/D__x86_64__"
         - arch: "x86"
           aflags: "/D__i386__"
    env:
      AFLAGS: ${{ matrix.aflags }}
      arch: ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v2
      - name: pthreads
        run: |
          curl -o pthreads.zip ftp://sourceware.org/pub/pthreads-win32/pthreads-w32-2-9-1-release.zip
          unzip pthreads.zip -d pthreads
          mkdir -p src bin
          cp pthreads/Pre-built.2/include/* src/
          cp pthreads/Pre-built.2/dll/${arch}/pthreadVC2.dll bin/pthreadVC2.dll
          cp pthreads/Pre-built.2/lib/${arch}/pthreadVC2.lib bin/pthreadVC.lib
        shell: 'bash'
      - name: setup Visual Studio Cmdline
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: Build
        run: |
          cd src
          nmake /f makefile.msvc AFLAGS="${env:AFLAGS} /DHAVE_STRUCT_TIMESPEC=1"
